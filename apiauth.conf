set $authproxy http://auth-proxy:8080;

location /api {
  auth_request /auth;
  auth_request_set $proxy_env $upstream_http_X_Environment;
  auth_request_set $auth_user $upstream_http_X_Username;
  auth_request_set $auth_key $upstream_http_X_API-Key;
  auth_request_set $auth_idnt $upstream_http_X_UserID;
  proxy_set_header Host $redirect_host;
#  proxy_set_header X-API-Key $outgoing_api_key;
  proxy_pass $notifiarr_upstream$request_uri;
}

location = /auth {
  internal;
  proxy_pass_request_body off;
  proxy_set_header Content-Length "";
  proxy_set_header X-Original-URI $request_uri;
  proxy_set_header X-API-Key $incoming_api_key;
  proxy_set_header X-Server $http_X_Server;
  proxy_set_header X-Password $http_X_Password;
  proxy_set_header Host $host;
  proxy_pass $authproxy/auth;
}

error_page 401 = @error401;

# If the user provided an invalid api key, give them an error page that tells them so.
location @error401 {
  set $auth_user -;
  set $auth_idnt -;
  more_set_headers "Content-Type: application/json";
  more_set_headers "X-Original-URI: ${request_uri}";
  return 401 '{ "error": "invalid api key", "incoming": "${incoming_api_key}", "outgoing": "${outgoing_api_key}" }';
}
